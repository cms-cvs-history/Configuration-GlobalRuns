process Rec = {
  untracked PSet maxEvents = {untracked int32 input = 1000}
#    service = Tracer {}

    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    include "CondCore/DBCommon/data/CondDBSetup.cfi"

#   service = MessageLogger {
#     untracked vstring destinations = { "cout" }
#     untracked PSet cout = {
#       untracked string threshold = "DEBUG"
#     }
#     untracked PSet log4cplus = {
#       untracked string threshold = "WARNING"
#     }
#   }


#
### input
#
#
## rootified raw data
#
    source = PoolSource {
       untracked vstring fileNames = {'file:GlobalMar08_37965_A.root'}
}
### output module
#

   module FEVT = PoolOutputModule {
	
	untracked string fileName = 'reco-gr.root'

    untracked PSet dataset =
    {
      untracked string dataTier = "RECO"
    }
   }

   untracked PSet configurationMetadata =
   {
    untracked string version = "$Revision: 1.2 $"
    untracked string name = "$Source: /cvs_server/repositories/CMSSW/CMSSW/Configuration/GlobalRuns/data/recoT0.cfg,v $"
    untracked string annotation = "GRUMM Prompt Reco"
   }


   untracked PSet options = {
        untracked bool wantSummary = true  # default is false
     }

 # service = Timing {}

### Conditions (Global Tag is used here):
include "Configuration/GlobalRuns/data/FrontierConditionsGRGlobalTag.cff"
replace GlobalTag.connect = "oracle://cms_orcoff_int2r/CMS_COND_GENERAL"
replace GlobalTag.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"
replace GlobalTag.timetype = "runnumber"
replace GlobalTag.globaltag = "GRUMM_V4::All"

### Magnetic fiuld: force mag field to be 0.0 tesla
   es_module localUniform = UniformMagneticFieldESProducer {
      double ZFieldInTesla = 0.0
    }

   es_prefer localUniform = UniformMagneticFieldESProducer{}
   replace SteppingHelixPropagatorAny.useInTeslaFromMagField = true
   replace SteppingHelixPropagatorAlong.useInTeslaFromMagField = true
   replace SteppingHelixPropagatorOpposite.useInTeslaFromMagField = true
   replace SteppingHelixPropagatorAny.SetVBFPointer = true
   replace SteppingHelixPropagatorAlong.SetVBFPointer = true
   replace SteppingHelixPropagatorOpposite.SetVBFPointer = true
   replace VolumeBasedMagneticFieldESProducer.label = "VolumeBasedMagneticField"



## reconstruction  INLINED 
#dirty hack to have the hcal override in CMSS183
#tracker lines removed
include "RecoLocalCalo/Configuration/data/RecoLocalCalo.cff"
include "RecoLocalCalo/EcalRecProducers/data/ecalFixedAlphaBetaFitUncalibRecHit.cfi"
include "RecoEcal/Configuration/data/RecoEcal.cff"


    sequence ecal = {ecalFixedAlphaBetaFitUncalibRecHit, ecalWeightUncalibRecHit, ecalRecHit}
    sequence ecalClustersGR = {islandClusteringSequence,hybridClusteringSequence}

replace hbhereco.firstSample = 1
replace hbhereco.samplesToAdd = 8
replace hbhereco.correctForTimeslew = true
replace hbhereco.correctForPhaseContainment = true
replace hbhereco.correctionPhaseNS = 10.0

replace horeco.firstSample = 1
replace horeco.samplesToAdd = 8
replace horeco.correctForTimeslew = true
replace horeco.correctForPhaseContainment = true
replace horeco.correctionPhaseNS = 10.

replace hfreco.firstSample = 1
replace hfreco.samplesToAdd = 8
replace hfreco.correctForTimeslew = true
replace hfreco.correctForPhaseContainment = true
replace hfreco.correctionPhaseNS = 10.

#here the offending line
replace towerMaker.HOWeight=1e-99

    sequence hcal = {hcalLocalRecoSequence}
    sequence caloGR = { ecal, ecalClustersGR, hcal }

include "RecoLocalMuon/Configuration/data/RecoLocalMuonCosmics.cff"
include "RecoMuon/Configuration/data/RecoMuonCosmics.cff"
    sequence muonsGR = {  muonlocalreco, muonrecoforcosmics  }

include "RecoJets/Configuration/data/RecoJets.cff"
include "RecoJets/Configuration/data/CaloTowersRec.cff"
include "Configuration/GlobalRuns/data/jet-override.cff"

    sequence jetsGR = {caloTowersRec, recoJets}

    sequence reconstructionGR = {caloGR, muonsGR,  jetsGR}





## offline raw to digi
include "Configuration/GlobalRuns/data/RawToDigiGR.cff"


#    module testMagneticField = testMagneticField {}

    path allPath = {  RawToDigi , reconstructionGR  }

    endpath outpath = {FEVT}
}
