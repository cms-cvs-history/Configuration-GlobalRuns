#======================================================================
#
# This configuration file is tailored for the reprocessing of
# MTCC (2006) data.  There are special options and cards that
# have been designated especiall for this purpose.
#
#======================================================================
process RECONMTCC = {

  source = PoolSource {
       untracked vstring fileNames = {
        "file:./mtcc_0.root" ,
        "file:./mtcc_1.root" ,
        "file:./mtcc_2.root" ,
        "file:./mtcc_3.root"
       }
  }

  untracked PSet maxEvents = {untracked int32 input = 11}

# Specify the output file for the reconstructed events.
  module out = PoolOutputModule {
    untracked string fileName ="/tmp/schmittm/test.root"
  }

# These are some useful utilities.
  service = Timing { }
  service = SimpleMemoryCheck { }
  service = EnableFloatingPointExceptions {}
  service = Tracer { untracked string indention = ".." }

# These are some geometry modules needed for recHits and segments
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  include "Geometry/CSCGeometry/data/cscGeometry.cfi"
  include "Geometry/DTGeometry/data/dtGeometry.cfi"
  include "Geometry/RPCGeometry/data/rpcGeometry.cfi"
  include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"
  include "Geometry/CommonDetUnit/data/globalTrackingGeometry.cfi"
  include "RecoMuon/DetLayers/data/muonDetLayerGeometry.cfi"
  include "RecoMuon/TrackingTools/data/MuonServiceProxy.cff"

# Magnetic Field
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

#--------------------------------------------------
# data bases, etc.
#--------------------------------------------------

include "CondCore/DBCommon/data/CondDBSetup.cfi"
include "CondCore/DBCommon/data/CondDBCommon.cfi"

# - CSC --------------------------------------------------

include "CalibMuon/Configuration/data/CSC_FakeConditions.cff"

#   es_source cscConstants = PoolDBESSource { 
#     VPSet toGet = {
#             { string record = "CSCGainsRcd"
#               string tag    = "CSCGains_ideal" },
#             { string record = "CSCPedestalsRcd"
#               string tag    = "CSCPedestals_ideal" },
#             { string record = "CSCNoiseMatrixRcd"
#               string tag    = "CSCNoiseMatrix_ideal" },
#             { string record = "CSCcrosstalkRcd"
#               string tag    = "CSCCrosstalk_ideal" }
#                   }
#     bool loadAll = true
#     string connect="oracle://cms_orcoff_int2r/CMS_COND_CSC"
#     untracked string catalog = "relationalcatalog_oracle://cms_orcoff_int2r/CMS_COND_GENERAL"
#     string timetype = "runnumber"
#     PSet DBParameters = {
#               untracked string authenticationPath="/afs/cern.ch/cms/DB/conddb"
#               untracked uint32 authenticationMethod = 0
#                         }
#        untracked PSet maxEvents = {untracked int32 input = 1}
#     }


# - DT --------------------------------------------------

# channel map  (special for MTCC)

  es_source channelsMap = PoolDBESSource {  
        using CondDBSetup
        string connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/MTCC/channelsMap.db"
        untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/MTCC/channelsMap.xml"
        string timetype = "runnumber"    
        untracked uint32 authenticationMethod = 0
        VPSet toGet = {{
                 string record = "DTReadOutMappingRcd"
                 string tag = "channelsMap"
            }}
    }


# - HCAL --------------------------------------------------

     es_module = HcalDbProducer {}
     es_source es_hardcode = HcalHardcodeCalibrations { 
           untracked vstring toGet= {
               "Gains","Pedestals","PedestalWidths", "GainWidths", "QIEShape", "QIEData", "ChannelQuality" 
           } 
        }
     es_source es_ascii = HcalTextCalibrations { 
       VPSet input = { 
              {
                string object="ElectronicsMap"
                //FileInPath file="CondFormats/HcalObjects/data/emap_mtcc_hbheho_trig.txt"
                //FileInPath file="CondFormats/HcalObjects/data/emap_hbheho_with_triggertowers_noR1_s3.txt"
                FileInPath file="emap_hbheho_with_triggertowers_noR1_s3_nowarnings.txt"
              }
       }
     }


#--------------------------------------------------
# Specify the data unpackers, which make the DIGIs.
#--------------------------------------------------

include "EventFilter/CSCRawToDigi/data/cscUnpacker.cfi"
    replace cscunpacker.UseExaminer = false
    replace cscunpacker.UnpackStatusDigis = true
    replace cscunpacker.isMTCCData = true

include "EventFilter/DTRawToDigi/data/dtunpacker.cfi"
    replace dtunpacker.isRaw = false
    replace dtunpacker.globalDAQ = true

# include "EventFilter/RPCRawToDigi/data/RPCUnpacking.cfi"

# include "EventFilter/HcalRawToDigi/data/HcalRawToDigi-mtcc.cfi"

 module hcalDigis = HcalRawToDigi {
    int32 firstSample = 0
    int32 lastSample = 9
    untracked bool UnpackCalib = false
    bool FilterDataQuality = true
    untracked int32 HcalFirstFED = 700
    untracked vint32 FEDs = { 700, 701, 702, 703 }
    untracked bool ComplainEmptyData = false
    untracked bool ExceptionEmptyData = false
    InputTag InputLabel = source
 }

#--------------------------------------------------
# Specify the recHit reconstruction routine.
#--------------------------------------------------

include "RecoLocalMuon/CSCRecHitB/data/cscRecHitB_MTCC.cfi"
   replace csc2DRecHits.CSCchamberIdPrefix = 0

#--------------------------------------------------
# Specify the segment reconstruction routine.
#--------------------------------------------------

include "RecoLocalMuon/CSCSegment/data/cscSegments.cfi"
   replace cscSegments.algo_type = 3

#--------------------------------------------------
# reconstruct cosmic muons   (from Chang Liu)
#--------------------------------------------------

include "RecoMuon/TrackingTools/data/MuonUpdatorAtVertex.cff"
include "TrackPropagation/SteppingHelixPropagator/data/SteppingHelixPropagatorAny.cfi"

include "RecoMuon/MuonSeedGenerator/data/CosmicMuonSeedProducer.cfi"
   replace CosmicMuonSeed.EnableDTMeasurement = false
include "RecoMuon/CosmicMuonProducer/data/CosmicMuonProducer.cfi"
   replace cosmicMuons.TrajectoryBuilderParameters.EnableDTMeasurement = false
   replace cosmicMuons.TrajectoryBuilderParameters.EnableRPCMeasurement = false

#--------------------------------------------------
# Specify the analysis path and output module.
#--------------------------------------------------

path p = {cscunpacker, dtunpacker, hcalDigis, csc2DRecHits, cscSegments, CosmicMuonSeed, cosmicMuons}

endpath e = {out}

}
